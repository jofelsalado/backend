// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model User {
  id                Int                 @id @default(autoincrement())
  accountNo         String              @unique
  avatarImage       String
  firstName         String
  middleName        String?
  lastName          String
  gender            String
  contactNo         String
  address           String              @db.Text
  birthdate         String
  email             String              @unique
  username          String              @unique
  password          String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  userTypeId        Int
  userType          UserType            @relation(references: [id], fields: [userTypeId])
  userJWTBlacklist  UserJWTBlacklist[]
  leadId            Int?
  lead              Lead?
  adviserId         Int?
  adviser           Adviser?
  adminManageReport AdminManageReport[]
  feedbackRating    FeedbackRating[]

  @@index([id, userTypeId, leadId])
}

model UserJWTBlacklist {
  id        Int      @id @default(autoincrement())
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?

  @@index([id])
}

model Adviser {
  id                         Int                          @id @default(autoincrement())
  roleId                     Int
  rating                     String
  company                    String
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  userId                     Int                          @unique
  user                       User                         @relation(references: [id], fields: [userId])
  products                   Product[]
  adviserComplaintReport     AdviserComplaintReport[]
  adviserConsultationHistory AdviserConsultationHistory[]
  adviserNotification        AdviserNotification[]

  @@index([id, userId])
}

model Lead {
  id                        Int                         @id @default(autoincrement())
  roleId                    Int
  rating                    String
  company                   String
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  userId                    Int                         @unique
  user                      User                        @relation(references: [id], fields: [userId])
  leadNotification          LeadNotification[]
  adviserManageConsultation AdviserManageConsultation[]
  leadInquiry               LeadInquiry[]
  leadConsultaionHistory    LeadConsultationHistory[]
  leadComplaintReport       LeadComplaintReport[]

  @@index([id, userId])
}

model LeadInquiry {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  leadId    Int
  lead      Lead     @relation(references: [id], fields: [leadId])
  productId Int
  product   Product  @relation(references: [id], fields: [productId])

  @@index([id, productId])
}

model LeadNotification {
  id                    Int                 @id @default(autoincrement())
  reportType            String
  time                  String
  status                String
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  leadId                Int
  lead                  Lead                @relation(references: [id], fields: [leadId])
  leadComplaintReportId Int
  leadComplaintReport   LeadComplaintReport @relation(fields: [leadComplaintReportId], references: [id])

  @@index([id, leadId])
}

model LeadComplaintReport {
  id               Int                @id @default(autoincrement())
  name             String
  description      String
  reportDate       DateTime
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  leadId           Int
  lead             Lead               @relation(references: [id], fields: [leadId])
  leadNotification LeadNotification[]

  @@index([id, leadId])
}

model LeadConsultationHistory {
  id          Int      @id @default(autoincrement())
  company     String
  meetingType String
  adviserName String
  type        String
  fee         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  leadId      Int
  lead        Lead     @relation(references: [id], fields: [leadId])
  productId   Int
  product     Product  @relation(references: [id], fields: [productId])

  @@index([id, leadId, productId])
}

model Product {
  id                         Int                          @id @default(autoincrement())
  sku                        String
  name                       String
  description                String                       @db.LongText
  type                       String
  quotation                  String
  status                     String
  meetingType                String
  url                        String
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  adviserId                  Int?
  adviser                    Adviser?                     @relation(references: [id], fields: [adviserId])
  leadInquiry                LeadInquiry[]
  adviserManageConsultation  AdviserManageConsultation[]
  leadConsultaionHistory     LeadConsultationHistory[]
  adviserConsultationHistory AdviserConsultationHistory[]

  @@index([id, adviserId])
}

model AdviserManageConsultation {
  id          Int      @id @default(autoincrement())
  type        String
  meetingType String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productId   Int
  product     Product  @relation(references: [id], fields: [productId])
  leadId      Int
  lead        Lead     @relation(references: [id], fields: [leadId])

  @@index([id, productId, leadId])
}

model AdviserComplaintReport {
  id                  Int                   @id @default(autoincrement())
  name                String
  description         String
  reportDate          DateTime
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  adviserId           Int
  adviser             Adviser               @relation(references: [id], fields: [adviserId])
  adviserNotification AdviserNotification[]

  @@index([id, adviserId])
}

model AdviserConsultationHistory {
  id          Int      @id @default(autoincrement())
  company     String
  meetingType String
  adviserName String
  type        String
  fee         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  adviserId   Int
  adviser     Adviser  @relation(references: [id], fields: [adviserId])
  productId   Int
  product     Product  @relation(references: [id], fields: [productId])

  @@index([id, adviserId, productId])
}

model AdviserNotification {
  id                       Int                    @id @default(autoincrement())
  reportType               String
  time                     String
  status                   String
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt
  adviserId                Int
  adviser                  Adviser                @relation(references: [id], fields: [adviserId])
  adviserComplaintReportId Int
  adviserComplaintReport   AdviserComplaintReport @relation(fields: [adviserComplaintReportId], references: [id])

  @@index([id, adviserId, adviserComplaintReportId])
}

model AdminManageReport {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String   @db.Text
  reportDate  DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@index([id, userId])
}

model FeedbackRating {
  id                  Int      @id @default(autoincrement())
  createdAt           DateTime @default(now())
  rating              String
  feedbackDescription String
  feedbackDate        DateTime @default(now())
  updatedAt           DateTime @updatedAt
  userId              Int
  user                User     @relation(fields: [userId], references: [id])

  @@index([id, userId])
}
