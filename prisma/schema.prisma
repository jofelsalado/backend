// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model UserType {
  id        Int      @id @unique @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model User {
  id               Int                @id @unique @default(autoincrement())
  accountNo        String             @unique
  avatarImage      String
  firstName        String
  middleName       String?
  lastName         String
  gender           String
  contactNo        String
  address          String             @db.Text
  birthdate        String
  email            String             @unique
  username         String             @unique
  password         String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  userTypeId       Int
  userType         UserType           @relation(references: [id], fields: [userTypeId])
  userJWTBlacklist UserJWTBlacklist[]
  leadId           Int?
  lead             Lead?
  adviserId        Int?
  adviser          Adviser?

  @@index([id, userTypeId, leadId])
}

model UserJWTBlacklist {
  id        Int      @id @unique @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(references: [id], fields: [userId])

  @@index([id, userId])
}

model Adviser {
  id        Int       @id @unique @default(autoincrement())
  roleId    Int
  rating    String
  company   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    Int       @unique
  user      User      @relation(references: [id], fields: [userId])
  products  Product[]

  @@index([id, userId])
}

model Lead {
  id                Int                @id @unique @default(autoincrement())
  roleId            Int
  rating            String
  company           String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  userId            Int                @unique
  user              User               @relation(references: [id], fields: [userId])
  leadNotifications LeadNotification[]

  @@index([id, userId])
}

model LeadInquiry {
  id        Int      @id @unique @default(autoincrement())
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  product   Product  @relation(references: [id], fields: [productId])

  @@index([productId])
}

model LeadNotification {
  id         Int    @id @unique @default(autoincrement())
  reportType String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  leadId    Int
  lead      Lead     @relation(references: [id], fields: [leadId])

  @@index([id, leadId])
}

model Product {
  id            Int           @id @unique @default(autoincrement())
  sku           String        @unique
  name          String        @unique
  description   String        @db.LongText
  type          String
  quotation     String
  status        String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  adviserId     Int
  adviser       Adviser       @relation(references: [id], fields: [adviserId])
  leadInquiries LeadInquiry[]

  @@index([adviserId])
}
